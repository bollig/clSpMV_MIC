=====================================
Input Node file: 
kernel_path: 
kernel_name: 
asci_binary: 
data type: 
co_processor: 
cpu_processor: 
sparse_format: 
nb_sockets: 3079384
nb_cores: 11153
nb_coprocessors: 2137604488
nb_nodes: 2145091609
nb_nodes_per_stencil: 0
kernel_exec_time: 0.000000 (ms)
argv[0]= ./linux/release/spmv_openmp_host
argv[1]= matrix/ell_kd-tree_x_weights_direct__no_hv_stsize_32_3d_64x_64y_64z.bmtx
argv[2]= 1
filename= matrix/ell_kd-tree_x_weights_direct__no_hv_stsize_32_3d_64x_64y_64z.bmtx
choice= 1
argv[0]= 1
[ProjectSettings]   Reading config file: test.conf
[Project Settings] 	asci_binary = binary
asci_binary= binary
[Project Settings] 	in_format = ELL
filename = matrix/ell_kd-tree_x_weights_direct__no_hv_stsize_32_3d_64x_64y_64z.bmtx
choice= 1
spmv in ell format using OpenNP in Native mode
host
[ProjectSettings]   Reading config file: test.conf
[Project Settings] 	asci_binary = binary
[Project Settings] 	sparsity = NONE
[Project Settings] 	diag_sep = 80000
[Project Settings] 	inner_bandwidth = 2000
[Project Settings] 	sort_col_indices = 0
[Project Settings] 	n3d = 128
[Project Settings] 	random_seed = 1
[Project Settings] 	use_subdomains = 0
sparsity = NONE
[Project Settings] 	in_format = ELL
format == ELL ************
before load
** nb_rows= 262144
stencil_size= 32

Read ELLPACK file
Inside empty ProjectSettings destructor
---------------------------------------
*** ITERATION 0 ***
set num threads to 1 +++
num_threads (omp_get_num_threads)= 1
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
0.312669 gflops, 53.658001 (ms)
0.312605 gflops, 53.668999 (ms)
0.312774 gflops, 53.639999 (ms)
0.312349 gflops, 53.713001 (ms)
0.312804 gflops, 53.634998 (ms)
0.311601 gflops, 53.841999 (ms)
0.312897 gflops, 53.618999 (ms)
method_8a_base_cpp, threads: 1, Max Gflops: 0.312897, min time: 53.618999 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
-0.473213 gflops, -567.260986 (ms)
0.621887 gflops, 431.647003 (ms)
-0.473561 gflops, -566.843994 (ms)
0.621776 gflops, 431.723999 (ms)
-0.473385 gflops, -567.054993 (ms)
0.621732 gflops, 431.753998 (ms)
0.621874 gflops, 431.656006 (ms)
method_8a_multi_cpp, threads: 1, Max Gflops: 0.621887, min time: 431.647003 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
2.024675 gflops, 132.582001 (ms)
s= 0
-0.309990 gflops, -865.950012 (ms)
s= 0
2.028546 gflops, 132.328995 (ms)
s= 0
2.043183 gflops, 131.380997 (ms)
s= 0
2.035282 gflops, 131.891006 (ms)
s= 0
-0.309458 gflops, -867.437012 (ms)
s= 0
2.042530 gflops, 131.423004 (ms)
method_8a_multi, threads: 1, Max Gflops: 2.043183, min time: 131.380997 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
2.044086 gflops, 131.322998 (ms)
exit omp parallel
2.044148 gflops, 131.319000 (ms)
exit omp parallel
2.043572 gflops, 131.356003 (ms)
exit omp parallel
2.042717 gflops, 131.410995 (ms)
exit omp parallel
2.043728 gflops, 131.345993 (ms)
exit omp parallel
2.043588 gflops, 131.354996 (ms)
exit omp parallel
2.043028 gflops, 131.391006 (ms)
method_8a_multi_optimal, threads: 1, Max Gflops: 2.044148, min time: 131.319000 (ms)
---------------------------------------
*** ITERATION 1 ***
set num threads to 2 +++
num_threads (omp_get_num_threads)= 2
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
0.491698 gflops, 34.120998 (ms)
0.492491 gflops, 34.066002 (ms)
0.492607 gflops, 34.057999 (ms)
0.493723 gflops, 33.980999 (ms)
-0.017387 gflops, -964.953003 (ms)
0.492549 gflops, 34.062000 (ms)
0.492116 gflops, 34.091999 (ms)
method_8a_base_cpp, threads: 2, Max Gflops: 0.493723, min time: 33.980999 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
0.844527 gflops, 317.852997 (ms)
-0.394341 gflops, -680.719971 (ms)
0.844609 gflops, 317.821991 (ms)
0.842716 gflops, 318.536011 (ms)
-0.394089 gflops, -681.155029 (ms)
0.843877 gflops, 318.097992 (ms)
0.843914 gflops, 318.084015 (ms)
method_8a_multi_cpp, threads: 2, Max Gflops: 0.844609, min time: 317.821991 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
2.145767 gflops, 125.099998 (ms)
s= 0
2.144344 gflops, 125.182999 (ms)
s= 0
2.146900 gflops, 125.033997 (ms)
s= 0
2.146625 gflops, 125.050003 (ms)
s= 0
2.147295 gflops, 125.011002 (ms)
s= 0
2.145407 gflops, 125.121002 (ms)
s= 0
2.144807 gflops, 125.155998 (ms)
method_8a_multi, threads: 2, Max Gflops: 2.147295, min time: 125.011002 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
-0.306998 gflops, -874.388000 (ms)
exit omp parallel
2.162395 gflops, 124.138000 (ms)
exit omp parallel
2.157963 gflops, 124.392998 (ms)
exit omp parallel
2.159473 gflops, 124.306000 (ms)
exit omp parallel
-0.306871 gflops, -874.750000 (ms)
exit omp parallel
2.162169 gflops, 124.151001 (ms)
exit omp parallel
2.159091 gflops, 124.328003 (ms)
method_8a_multi_optimal, threads: 2, Max Gflops: 2.162395, min time: 124.138000 (ms)
---------------------------------------
*** ITERATION 2 ***
set num threads to 4 +++
num_threads (omp_get_num_threads)= 4
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
0.924008 gflops, 18.157000 (ms)
0.922535 gflops, 18.186001 (ms)
0.923703 gflops, 18.163000 (ms)
0.923805 gflops, 18.160999 (ms)
0.922484 gflops, 18.187000 (ms)
0.924925 gflops, 18.139000 (ms)
0.925231 gflops, 18.132999 (ms)
method_8a_base_cpp, threads: 4, Max Gflops: 0.925231, min time: 18.132999 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
-0.343490 gflops, -781.494995 (ms)
1.237805 gflops, 216.863998 (ms)
1.236244 gflops, 217.138000 (ms)
1.237338 gflops, 216.945999 (ms)
1.237378 gflops, 216.938995 (ms)
-0.343282 gflops, -781.966980 (ms)
1.237509 gflops, 216.916000 (ms)
method_8a_multi_cpp, threads: 4, Max Gflops: 1.237805, min time: 216.863998 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
4.275743 gflops, 62.780998 (ms)
s= 0
4.276357 gflops, 62.771999 (ms)
s= 0
4.262843 gflops, 62.971001 (ms)
s= 0
4.277447 gflops, 62.756001 (ms)
s= 0
4.269895 gflops, 62.867001 (ms)
s= 0
4.265891 gflops, 62.925999 (ms)
s= 0
4.273089 gflops, 62.820000 (ms)
method_8a_multi, threads: 4, Max Gflops: 4.277447, min time: 62.756001 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
4.301092 gflops, 62.410999 (ms)
exit omp parallel
-0.286652 gflops, -936.452026 (ms)
exit omp parallel
4.297649 gflops, 62.460999 (ms)
exit omp parallel
4.306129 gflops, 62.338001 (ms)
exit omp parallel
4.301506 gflops, 62.404999 (ms)
exit omp parallel
4.304058 gflops, 62.368000 (ms)
exit omp parallel
4.303988 gflops, 62.368999 (ms)
method_8a_multi_optimal, threads: 4, Max Gflops: 4.306129, min time: 62.338001 (ms)
---------------------------------------
*** ITERATION 3 ***
set num threads to 8 +++
num_threads (omp_get_num_threads)= 8
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
1.790716 gflops, 9.369000 (ms)
1.793779 gflops, 9.353000 (ms)
1.783861 gflops, 9.405000 (ms)
1.783482 gflops, 9.407000 (ms)
1.789379 gflops, 9.376000 (ms)
1.791672 gflops, 9.364000 (ms)
1.793204 gflops, 9.356000 (ms)
method_8a_base_cpp, threads: 8, Max Gflops: 1.793779, min time: 9.353000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
1.587389 gflops, 169.104996 (ms)
1.588770 gflops, 168.957993 (ms)
1.588742 gflops, 168.960999 (ms)
1.587887 gflops, 169.052002 (ms)
1.587126 gflops, 169.132996 (ms)
-0.323452 gflops, -829.908020 (ms)
1.587361 gflops, 169.108002 (ms)
method_8a_multi_cpp, threads: 8, Max Gflops: 1.588770, min time: 168.957993 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
8.324096 gflops, 32.248001 (ms)
s= 0
8.321000 gflops, 32.259998 (ms)
s= 0
8.324613 gflops, 32.245998 (ms)
s= 0
8.309666 gflops, 32.304001 (ms)
s= 0
8.307095 gflops, 32.313999 (ms)
s= 0
8.292468 gflops, 32.370998 (ms)
s= 0
8.315071 gflops, 32.283001 (ms)
method_8a_multi, threads: 8, Max Gflops: 8.324613, min time: 32.245998 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
8.385463 gflops, 32.012001 (ms)
exit omp parallel
8.384939 gflops, 32.014000 (ms)
exit omp parallel
8.391755 gflops, 31.988001 (ms)
exit omp parallel
8.382321 gflops, 32.023998 (ms)
exit omp parallel
8.372909 gflops, 32.060001 (ms)
exit omp parallel
-0.277612 gflops, -966.945984 (ms)
exit omp parallel
8.391493 gflops, 31.989000 (ms)
method_8a_multi_optimal, threads: 8, Max Gflops: 8.391755, min time: 31.988001 (ms)
---------------------------------------
*** ITERATION 4 ***
set num threads to 16 +++
num_threads (omp_get_num_threads)= 16
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
3.143567 gflops, 5.337000 (ms)
3.060419 gflops, 5.482000 (ms)
3.121923 gflops, 5.374000 (ms)
3.141801 gflops, 5.340000 (ms)
3.097142 gflops, 5.417000 (ms)
3.148286 gflops, 5.329000 (ms)
3.114389 gflops, 5.387000 (ms)
method_8a_base_cpp, threads: 16, Max Gflops: 3.148286, min time: 5.329000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
1.852352 gflops, 144.916000 (ms)
1.851037 gflops, 145.018997 (ms)
1.850309 gflops, 145.076004 (ms)
1.850590 gflops, 145.054001 (ms)
1.851024 gflops, 145.020004 (ms)
-0.314529 gflops, -853.453003 (ms)
1.849251 gflops, 145.158997 (ms)
method_8a_multi_cpp, threads: 16, Max Gflops: 1.852352, min time: 144.916000 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
15.717281 gflops, 17.079000 (ms)
s= 0
15.668658 gflops, 17.132000 (ms)
s= 0
15.666829 gflops, 17.134001 (ms)
s= 0
15.675063 gflops, 17.125000 (ms)
s= 0
15.715442 gflops, 17.080999 (ms)
s= 0
15.702572 gflops, 17.094999 (ms)
s= 0
-0.273384 gflops, -981.900024 (ms)
method_8a_multi, threads: 16, Max Gflops: 15.717281, min time: 17.079000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
-0.273361 gflops, -981.981018 (ms)
exit omp parallel
15.780110 gflops, 17.011000 (ms)
exit omp parallel
15.821965 gflops, 16.966000 (ms)
exit omp parallel
15.781037 gflops, 17.010000 (ms)
exit omp parallel
15.603084 gflops, 17.204000 (ms)
exit omp parallel
15.786607 gflops, 17.004000 (ms)
exit omp parallel
15.765282 gflops, 17.027000 (ms)
method_8a_multi_optimal, threads: 16, Max Gflops: 15.821965, min time: 16.966000 (ms)
---------------------------------------
*** ITERATION 5 ***
set num threads to 32 +++
num_threads (omp_get_num_threads)= 32
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
2.886154 gflops, 5.813000 (ms)
1.432970 gflops, 11.708000 (ms)
0.892263 gflops, 18.802999 (ms)
1.443698 gflops, 11.621000 (ms)
1.251844 gflops, 13.402000 (ms)
2.891626 gflops, 5.802000 (ms)
2.814969 gflops, 5.960000 (ms)
method_8a_base_cpp, threads: 32, Max Gflops: 2.891626, min time: 5.802000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
1.746922 gflops, 153.662003 (ms)
-0.318557 gflops, -842.661987 (ms)
1.708789 gflops, 157.091003 (ms)
1.840641 gflops, 145.837997 (ms)
1.937672 gflops, 138.535004 (ms)
1.969041 gflops, 136.328003 (ms)
1.858495 gflops, 144.436996 (ms)
method_8a_multi_cpp, threads: 32, Max Gflops: 1.969041, min time: 136.328003 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
7.261096 gflops, 36.969002 (ms)
s= 0
13.131566 gflops, 20.441999 (ms)
s= 0
11.556546 gflops, 23.228001 (ms)
s= 0
10.973570 gflops, 24.462000 (ms)
s= 0
12.171184 gflops, 22.055000 (ms)
s= 0
11.057192 gflops, 24.277000 (ms)
s= 0
11.088709 gflops, 24.208000 (ms)
method_8a_multi, threads: 32, Max Gflops: 13.131566, min time: 20.441999 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
12.072111 gflops, 22.236000 (ms)
exit omp parallel
16.315290 gflops, 16.452999 (ms)
exit omp parallel
11.027667 gflops, 24.341999 (ms)
exit omp parallel
12.710011 gflops, 21.120001 (ms)
exit omp parallel
21.746229 gflops, 12.344000 (ms)
exit omp parallel
14.806149 gflops, 18.129999 (ms)
exit omp parallel
11.585475 gflops, 23.170000 (ms)
method_8a_multi_optimal, threads: 32, Max Gflops: 21.746229, min time: 12.344000 (ms)
====================================
Timers [All times in ms (1/1000 s)]: 
====================================

[Timer] [method_0] Matrix-Vector multiply         |  avg:   -11.2476  |  tot: -2665.6738  |  count=   237
Inside empty ProjectSettings destructor
