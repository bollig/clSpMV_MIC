READ INPUT FILE: 
coo_matrix info
matrixInfo: width= 1000000, height= 1000000, nnz= 10000000
coo_row_id sz: 10000000, coo_col_id sz: 10000000, coo_data sz: 10000000
befpre spmv_ell
** GORDON, spmv_ell
Getting the platform

-------------MIC Device OpenCL Configuration------------


# 1 - print current configuration at MIC device startup
CL_CONFIG_MIC_DEVICE_PRINT_CONFIG=1


# 1 - gather info for GPA
CL_CONFIG_USE_GPA=0

# 1 - try to vectorize kernel during compilation
CL_CONFIG_USE_VECTORIZER=1

# 1 - connect to VTune on device
CL_CONFIG_USE_VTUNE=1


# 1 - deadloop on device during startup, wait for debugger
CL_CONFIG_MIC_DEVICE_STOP_AT_LOAD=0

# 1 - wrap kernels with try/catch
CL_CONFIG_MIC_DEVICE_SAFE_KERNEL_EXECUTION=1


# 1 - do not allow TBB workers to switch between HW threads
CL_CONFIG_MIC_DEVICE_USE_AFFINITY=1

# 0 - create 1 TBB worker per each HW thread per core, !=0 - limit TBB workers to the given number per core
CL_CONFIG_MIC_DEVICE_THREADS_PER_CORE=0

# 0 - use all MIC cores, !=0 - use specified number of cores
CL_CONFIG_MIC_DEVICE_NUM_CORES=0

# 1 - do not use 0 (system) MIC core
CL_CONFIG_MIC_DEVICE_IGNORE_CORE_0=1

# 1 - do not use last MIC core
CL_CONFIG_MIC_DEVICE_IGNORE_LAST_CORE=1

# 0 - disabled, !=0 - minimum size of buffer in kilobytes to use 2MB pages
CL_CONFIG_MIC_DEVICE_2MB_BUF_MINSIZE_KB=512

# must not be 0, recommended number of WGs to schedule for same thread
CL_CONFIG_MIC_DEVICE_TBB_GRAIN_SIZE=1

# affinity - tbb:affinity_partitioner, other - tbb::auto_partitioner
CL_CONFIG_MIC_DEVICE_TBB_SCHEDULER=auto

# default_TBB_tile - optimize by square tiles using TBB default implementation, columns - optimize columns, rows - optimize rows, tiles - optimize square tiles
CL_CONFIG_MIC_DEVICE_TBB_BLOCK_OPTIMIZATION=rows

# 1 - do not allow TBB workers to leave arena. Deadlocks if more than a single queue.
CL_CONFIG_MIC_DEVICE_TBB_TRAP_WORKERS=0

# 1 - perform host->device transfer only when really required
CL_CONFIG_MIC_DEVICE_LAZY_TRANSFER=0


# Restricts the process to use only the MIC cards specified as the value of the variable
OFFLOAD_DEVICES=

--------------------------------------------------------

[initialize] Using CL device: 0
	Device Name: Intel(R) Many Integrated Core Acceleration Card
	Driver Version: 1.2
	Vendor: 32902
	Max Compute Units: 240
	Max Work Item Dimensions: 3

MatInfo: Width 1000000 Height 1000000 NNZ 10000000
Max Offset 9 Min Offset -9
Histogram: <-15: 0 -15~-1 4000005 < 0-15 5999995 > 16 0
Cacheline usage per row: max 2 min 1 avg 1.562491
nnz= 10000000
rownum= 1000000
vecsize= 1000000
ellnum= 10
============== METHOD 0 ===================
****** kernel_name: gpu_ell ******
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++       LOAD KERNEL                           +++++++++
kernel_name= gpu_ell
kernel_source_file = spmv_ell.cl
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[CLBaseClass::loadProgram] ENABLE DOUBLE PRECISION IN KERNELS
**** method_0, sizeof(T): 4
1
2
3
4
5
6
GPU execution time = 4.59 ms

Correctness Check: Distance 0.000000e+00 max diff 0.000000e+00 max diff ratio 0.000000e+00 vec size 1000000
GPU execution time = 2.75 ms
GPU execution time = 2.75 ms
GPU execution time = 2.86 ms
GPU execution time = 2.77 ms
GPU execution time = 2.89 ms
GPU execution time = 2.87 ms
GPU execution time = 2.77 ms
GPU execution time = 2.76 ms
ntimes= 5, time_in_msec= 15.651941, nnz= 10000000

ELL cpu time 3.130388 ms GFLOPS 6.388984 code 0 


ELL float cpu time 3.130388 ms GFLOPS 6.388984 code 0 

============== METHOD 1 ===================
****** kernel_name: gpu_ell_v4 ******
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++       LOAD KERNEL                           +++++++++
kernel_name= gpu_ell_v4
kernel_source_file = spmv_ell.cl
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[CLBaseClass::loadProgram] ENABLE DOUBLE PRECISION IN KERNELS
GPU execution time = 3.33 ms

Correctness Check: Distance 0.000000e+00 max diff 0.000000e+00 max diff ratio 0.000000e+00 vec size 1000000
GPU execution time = 1.94 ms
GPU execution time = 1.88 ms
GPU execution time = 1.94 ms
GPU execution time = 1.89 ms
GPU execution time = 2.00 ms
GPU execution time = 1.86 ms
GPU execution time = 1.90 ms
GPU execution time = 1.83 ms
ntimes= 5, time_in_msec= 10.959148, nnz= 10000000

ELL float4 cpu time 2.191830 ms GFLOPS 9.124797 code 1 

GORDON: after ell_ocl.run

------------------------------------------------------------------------
ELL best time 2.191830 ms best method 1
------------------------------------------------------------------------
** GORDON, spmv_ell
[initialize] Using CL device: 0
	Device Name: Intel(R) Many Integrated Core Acceleration Card
	Driver Version: 1.2
	Vendor: 32902
	Max Compute Units: 240
	Max Work Item Dimensions: 3

MatInfo: Width 1000000 Height 1000000 NNZ 10000000
Max Offset 9 Min Offset -9
Histogram: <-15: 0 -15~-1 4000005 < 0-15 5999995 > 16 0
Cacheline usage per row: max 2 min 1 avg 1.562491
nnz= 10000000
rownum= 1000000
vecsize= 1000000
ellnum= 10
============== METHOD 0 ===================
****** kernel_name: gpu_ell_d ******
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++       LOAD KERNEL                           +++++++++
kernel_name= gpu_ell_d
kernel_source_file = spmv_ell_d.cl
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[CLBaseClass::loadProgram] ENABLE DOUBLE PRECISION IN KERNELS
**** method_0, sizeof(T): 8
1
2
3
4
5
6
GPU execution time = 5.32 ms

Correctness Check: Distance 0.000000e+00 max diff 0.000000e+00 max diff ratio 0.000000e+00 vec size 1000000
GPU execution time = 3.86 ms
GPU execution time = 3.89 ms
GPU execution time = 3.84 ms
GPU execution time = 3.85 ms
GPU execution time = 3.86 ms
GPU execution time = 3.79 ms
GPU execution time = 3.81 ms
GPU execution time = 3.77 ms
ntimes= 5, time_in_msec= 20.644903, nnz= 10000000

ELL cpu time 4.128981 ms GFLOPS 4.843811 code 0 


ELL double cpu time 4.128981 ms GFLOPS 4.843811 code 0 

============== METHOD 1 ===================
****** kernel_name: gpu_ell_v4_d ******
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++       LOAD KERNEL                           +++++++++
kernel_name= gpu_ell_v4_d
kernel_source_file = spmv_ell_d.cl
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[CLBaseClass::loadProgram] ENABLE DOUBLE PRECISION IN KERNELS
GPU execution time = 3.78 ms

Correctness Check: Distance 0.000000e+00 max diff 0.000000e+00 max diff ratio 0.000000e+00 vec size 1000000
GPU execution time = 2.70 ms
GPU execution time = 2.43 ms
GPU execution time = 2.43 ms
GPU execution time = 2.40 ms
GPU execution time = 2.37 ms
GPU execution time = 2.75 ms
GPU execution time = 2.66 ms
GPU execution time = 2.58 ms
ntimes= 5, time_in_msec= 13.915062, nnz= 10000000

ELL double4 cpu time 2.783012 ms GFLOPS 7.186457 code 1 

GORDON: after ell_ocl.run

------------------------------------------------------------------------
ELL best time 2.783012 ms best method 1
------------------------------------------------------------------------
