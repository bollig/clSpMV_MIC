MODE=icc
DEBUG=no
MIC=yes
VERBOSE=no
DEBUGMIC=no
O1=no
#OPT=yes  # slows code down

ifeq ($(MODE),gcc)
# ------- LINUX ----------
ccc = gcc
CC        = gcc
CXX        = g++
LD         = g++
#FLAGS      = -Wall -W -O2 -fopenmp
FLAGS      = -Wall -W -fopenmp
CFLAGS     += $(FLAGS) -Wstrict-prototypes 
CXXFLAGS   += $(FLAGS) -std=gnu++0x
LDFLAGS    += $(FLAGS)
endif

ifeq ($(MODE),nvcc)
# ------- LINUX ----------
ccc = nvcc
CC        = nvcc
CXX        = nvcc
LD         = nvcc
#FLAGS      = -Wall -W -O2 -fopenmp
FLAGS      = 
CFLAGS     += $(FLAGS) -Xcompiler -Wstrict-prototypes 
CXXFLAGS   += $(FLAGS) -Xcompiler -std=gnu++0x
LDFLAGS    += $(FLAGS)

CUDALDFLAGS= -L/usr/local/cuda/4.2.9/lib64  -lcudart -lcublas -lcusparse
CXXFLAGS+=-I/usr/local/cuda/4.2.9/include

#CUDALDFLAGS= -L/usr/local/cuda/5.0/lib64  -lcudart -lcublas -lcusparse
#CXXFLAGS+=-I/usr/local/cuda/5.0/include

endif


ifeq ($(MODE),icc)
# ------- LINUX ----------
ccc        = icc
CXX=icpc
CFLAGS     += -openmp 
CXXFLAGS   += -openmp -std=c++0x
LDFLAGS    += -openmp 
LD=icpc


ifeq ($(MIC),no)
CFLAGS += -no-offload
CXXFLAGS += -no-offload
LDFLAGS += -no-offload
endif
endif

# ifeq ($(MIC),yes)
# CFLAGS    += -offload-build -D MIC
# CXXFLAGS  += -offload-build -D MIC
# LDFLAGS   += -offload-build
# ifeq ($(VERBOSE),yes)
# CFLAGS    += -opt-report-phase:offload
# CXXFLAGS    += -opt-report-phase:offload
# endif
# endif


ifeq ($(MIC),yes)
CFLAGS += -mmic -DMIC
CXXFLAGS += -mmic -DMIC
LDFLAGS += -mmic -DMIC
MKL_LDFLAGS += -L /opt/intel/mkl/lib/mic/
# CFLAGS    += -offload-build -D MIC
# CXXFLAGS  += -offload-build -D MIC
# LDFLAGS   += -offload-build
# ifeq ($(VERBOSE),yes)
# CFLAGS    += -opt-report-phase:offload
# CXXFLAGS    += -opt-report-phase:offload
# endif
endif



ifeq ($(MODE),gcc) #remove pragma warning when compiled with gcc
ifeq ($(MIC),no)
CFLAGS   += -Wno-unknown-pragmas
CXXFLAGS += -Wno-unknown-pragmas
endif
endif

ifeq ($(DEBUG),yes)
CFLAGS    += -g 
CXXFLAGS    += -g 
LDFLAGS   += -g 
endif


ifeq ($(OPT),yes)
CFLAGS    += -DNDEBUG
CXXFLAGS    += -DNDEBUG
LDFLAGS   += -DNDEBUG
ifeq ($(O1),yes)
CFLAGS    += -O1
CXXFLAGS    += -O1
else
CFLAGS    += -O3
CXXFLAGS    += -O3
endif
endif



ifeq ($(DEBUGMIC),yes)
CFLAGS    += -offload-copts:-g
CXXFLAGS    += -offload-copts:-g
endif




AR         = ar rv
RANLIB     = ranlib

INC        = 
LIBS       = -lm



.SUFFIXES:
.SUFFIXES: .o .cpp
.SUFFIXES: .o .c

.c.o: 
	$(ccc) $(CFLAGS) $(INCLUDES) -c $*.c  

.cpp.o: 
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $*.cpp  

depend: $(SRCS)
	makedepend -Y -- $(INCLUDES) -- $(SRCS) 

clean:
	-rm *.o $(TARGET) *~
