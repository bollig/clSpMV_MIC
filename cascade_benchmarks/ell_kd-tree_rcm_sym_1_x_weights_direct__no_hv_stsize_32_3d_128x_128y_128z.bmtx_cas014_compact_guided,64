=====================================
Input Node file: 
kernel_path: 
kernel_name: 
asci_binary: 
data type: 
co_processor: 
cpu_processor: 
sparse_format: 
nb_sockets: 67259781
nb_cores: 32767
nb_coprocessors: -831887224
nb_nodes: 671185232
nb_nodes_per_stencil: 1
kernel_exec_time: 0.000000 (ms)
argv[0]= ./linux/release/spmv_openmp_host
argv[1]= matrix/ell_kd-tree_rcm_sym_1_x_weights_direct__no_hv_stsize_32_3d_128x_128y_128z.bmtx
argv[2]= 1
filename= matrix/ell_kd-tree_rcm_sym_1_x_weights_direct__no_hv_stsize_32_3d_128x_128y_128z.bmtx
choice= 1
argv[0]= 1
[ProjectSettings]   Reading config file: test.conf
[Project Settings] 	asci_binary = binary
asci_binary= binary
[Project Settings] 	in_format = ELL
filename = matrix/ell_kd-tree_rcm_sym_1_x_weights_direct__no_hv_stsize_32_3d_128x_128y_128z.bmtx
choice= 1
spmv in ell format using OpenNP in Native mode
host
[ProjectSettings]   Reading config file: test.conf
[Project Settings] 	asci_binary = binary
[Project Settings] 	sparsity = NONE
[Project Settings] 	diag_sep = 80000
[Project Settings] 	inner_bandwidth = 2000
[Project Settings] 	sort_col_indices = 0
[Project Settings] 	n3d = 128
[Project Settings] 	random_seed = 1
[Project Settings] 	use_subdomains = 0
sparsity = NONE
[Project Settings] 	in_format = ELL
format == ELL ************
before load
** nb_rows= 2097152
stencil_size= 32

Read ELLPACK file
Inside empty ProjectSettings destructor
---------------------------------------
*** ITERATION 0 ***
set num threads to 1 +++
num_threads (omp_get_num_threads)= 1
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 2097152, nb_rows*nz = 67108864
enter generate_vector
sz= 8388608
======= Reconstruct col_id matrix for special effects =====
nb_rows = 2097152
col_id[0] =0
2.234430 gflops, 60.068001 (ms)
2.231755 gflops, 60.139999 (ms)
-0.142938 gflops, -938.992004 (ms)
2.232423 gflops, 60.122002 (ms)
2.232460 gflops, 60.120998 (ms)
2.234169 gflops, 60.075001 (ms)
2.232126 gflops, 60.130001 (ms)
method_8a_base_cpp, threads: 1, Max Gflops: 2.234430, min time: 60.068001 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
-4.266756 gflops, -503.306000 (ms)
4.333448 gflops, 495.559998 (ms)
-4.272732 gflops, -502.601990 (ms)
4.332976 gflops, 495.614014 (ms)
-4.267264 gflops, -503.246002 (ms)
4.331403 gflops, 495.794006 (ms)
-4.265060 gflops, -503.506012 (ms)
method_8a_multi_cpp, threads: 1, Max Gflops: 4.333448, min time: 495.559998 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
7.995040 gflops, 268.601990 (ms)
s= 0
7.986536 gflops, 268.888000 (ms)
s= 0
-2.940248 gflops, -730.375000 (ms)
s= 0
7.998940 gflops, 268.471008 (ms)
s= 0
7.993373 gflops, 268.657990 (ms)
s= 0
7.986299 gflops, 268.895996 (ms)
s= 0
-2.940123 gflops, -730.406006 (ms)
method_8a_multi, threads: 1, Max Gflops: 7.998940, min time: 268.471008 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
7.987754 gflops, 268.846985 (ms)
exit omp parallel
7.987576 gflops, 268.852997 (ms)
exit omp parallel
7.976687 gflops, 269.220001 (ms)
exit omp parallel
-2.940969 gflops, -730.195984 (ms)
exit omp parallel
7.985734 gflops, 268.915009 (ms)
exit omp parallel
7.984338 gflops, 268.962006 (ms)
exit omp parallel
7.978406 gflops, 269.161987 (ms)
method_8a_multi_optimal, threads: 1, Max Gflops: 7.987754, min time: 268.846985 (ms)
---------------------------------------
*** ITERATION 1 ***
set num threads to 2 +++
num_threads (omp_get_num_threads)= 2
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 2097152, nb_rows*nz = 67108864
enter generate_vector
sz= 8388608
======= Reconstruct col_id matrix for special effects =====
nb_rows = 2097152
col_id[0] =0
4.377902 gflops, 30.658001 (ms)
4.393954 gflops, 30.546000 (ms)
4.381618 gflops, 30.632000 (ms)
4.381046 gflops, 30.636000 (ms)
4.389930 gflops, 30.573999 (ms)
4.377902 gflops, 30.658001 (ms)
4.377046 gflops, 30.664000 (ms)
method_8a_base_cpp, threads: 2, Max Gflops: 4.393954, min time: 30.546000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
9.015389 gflops, 238.201996 (ms)
8.973873 gflops, 239.304001 (ms)
-2.827415 gflops, -759.521973 (ms)
9.010018 gflops, 238.343994 (ms)
8.983445 gflops, 239.048996 (ms)
8.981717 gflops, 239.095001 (ms)
-2.825808 gflops, -759.953979 (ms)
method_8a_multi_cpp, threads: 2, Max Gflops: 9.015389, min time: 238.201996 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
14.903974 gflops, 144.087997 (ms)
s= 0
-2.501944 gflops, -858.325989 (ms)
s= 0
15.119930 gflops, 142.029999 (ms)
s= 0
15.019259 gflops, 142.981995 (ms)
s= 0
15.242597 gflops, 140.886993 (ms)
s= 0
15.281209 gflops, 140.531006 (ms)
s= 0
15.234594 gflops, 140.960999 (ms)
method_8a_multi, threads: 2, Max Gflops: 15.281209, min time: 140.531006 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
15.321331 gflops, 140.162994 (ms)
exit omp parallel
15.323735 gflops, 140.141006 (ms)
exit omp parallel
15.325485 gflops, 140.125000 (ms)
exit omp parallel
15.341908 gflops, 139.975006 (ms)
exit omp parallel
15.275775 gflops, 140.580994 (ms)
exit omp parallel
-2.500488 gflops, -858.825989 (ms)
exit omp parallel
-2.503645 gflops, -857.742981 (ms)
method_8a_multi_optimal, threads: 2, Max Gflops: 15.341908, min time: 139.975006 (ms)
---------------------------------------
*** ITERATION 2 ***
set num threads to 4 +++
num_threads (omp_get_num_threads)= 4
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 2097152, nb_rows*nz = 67108864
enter generate_vector
sz= 8388608
======= Reconstruct col_id matrix for special effects =====
nb_rows = 2097152
col_id[0] =0
8.174537 gflops, 16.419001 (ms)
8.210040 gflops, 16.348000 (ms)
8.201511 gflops, 16.365000 (ms)
8.212551 gflops, 16.343000 (ms)
8.223622 gflops, 16.320999 (ms)
8.222111 gflops, 16.323999 (ms)
8.201011 gflops, 16.365999 (ms)
method_8a_base_cpp, threads: 4, Max Gflops: 8.223622, min time: 16.320999 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
20.318125 gflops, 105.693001 (ms)
20.218653 gflops, 106.212997 (ms)
20.387180 gflops, 105.334999 (ms)
20.410044 gflops, 105.217003 (ms)
20.393375 gflops, 105.303001 (ms)
20.306406 gflops, 105.753998 (ms)
-2.400952 gflops, -894.429993 (ms)
method_8a_multi_cpp, threads: 4, Max Gflops: 20.410044, min time: 105.217003 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
28.155964 gflops, 76.271004 (ms)
s= 0
27.727715 gflops, 77.448997 (ms)
s= 0
27.607229 gflops, 77.787003 (ms)
s= 0
27.634941 gflops, 77.709000 (ms)
s= 0
28.054447 gflops, 76.546997 (ms)
s= 0
27.544909 gflops, 77.962997 (ms)
s= 0
28.257851 gflops, 75.996002 (ms)
method_8a_multi, threads: 4, Max Gflops: 28.257851, min time: 75.996002 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
28.024426 gflops, 76.628998 (ms)
exit omp parallel
28.578627 gflops, 75.142998 (ms)
exit omp parallel
28.564180 gflops, 75.181000 (ms)
exit omp parallel
28.593468 gflops, 75.103996 (ms)
exit omp parallel
28.452160 gflops, 75.476997 (ms)
exit omp parallel
28.597652 gflops, 75.093002 (ms)
exit omp parallel
28.594990 gflops, 75.099998 (ms)
method_8a_multi_optimal, threads: 4, Max Gflops: 28.597652, min time: 75.093002 (ms)
---------------------------------------
*** ITERATION 3 ***
set num threads to 8 +++
num_threads (omp_get_num_threads)= 8
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 2097152, nb_rows*nz = 67108864
enter generate_vector
sz= 8388608
======= Reconstruct col_id matrix for special effects =====
nb_rows = 2097152
col_id[0] =0
9.890039 gflops, 13.571000 (ms)
9.809087 gflops, 13.683000 (ms)
9.875486 gflops, 13.591000 (ms)
9.941318 gflops, 13.501000 (ms)
9.778358 gflops, 13.726000 (ms)
9.879120 gflops, 13.586000 (ms)
9.758451 gflops, 13.754000 (ms)
method_8a_base_cpp, threads: 8, Max Gflops: 9.941318, min time: 13.501000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
55.233631 gflops, 38.880001 (ms)
55.723797 gflops, 38.537998 (ms)
55.697781 gflops, 38.556000 (ms)
53.856739 gflops, 39.874001 (ms)
55.953194 gflops, 38.380001 (ms)
55.331829 gflops, 38.811001 (ms)
54.935501 gflops, 39.091000 (ms)
method_8a_multi_cpp, threads: 8, Max Gflops: 55.953194, min time: 38.380001 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
46.080372 gflops, 46.603001 (ms)
s= 0
46.136803 gflops, 46.546001 (ms)
s= 0
46.149693 gflops, 46.533001 (ms)
s= 0
46.200329 gflops, 46.481998 (ms)
s= 0
46.208282 gflops, 46.473999 (ms)
s= 0
46.101147 gflops, 46.582001 (ms)
s= 0
46.087296 gflops, 46.596001 (ms)
method_8a_multi, threads: 8, Max Gflops: 46.208282, min time: 46.473999 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
46.806530 gflops, 45.880001 (ms)
exit omp parallel
46.327904 gflops, 46.354000 (ms)
exit omp parallel
46.543785 gflops, 46.139000 (ms)
exit omp parallel
46.565987 gflops, 46.117001 (ms)
exit omp parallel
46.607422 gflops, 46.076000 (ms)
exit omp parallel
46.564980 gflops, 46.118000 (ms)
exit omp parallel
46.490379 gflops, 46.192001 (ms)
method_8a_multi_optimal, threads: 8, Max Gflops: 46.806530, min time: 45.880001 (ms)
---------------------------------------
*** ITERATION 4 ***
set num threads to 16 +++
num_threads (omp_get_num_threads)= 16
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 2097152, nb_rows*nz = 67108864
enter generate_vector
sz= 8388608
======= Reconstruct col_id matrix for special effects =====
nb_rows = 2097152
col_id[0] =0
6.729393 gflops, 19.945000 (ms)
6.680158 gflops, 20.091999 (ms)
6.763643 gflops, 19.844000 (ms)
6.715923 gflops, 19.985001 (ms)
6.716259 gflops, 19.983999 (ms)
6.713572 gflops, 19.992001 (ms)
6.739529 gflops, 19.915001 (ms)
method_8a_base_cpp, threads: 16, Max Gflops: 6.763643, min time: 19.844000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
-516.967651 gflops, -4.154000 (ms)
-411.080322 gflops, -5.224000 (ms)
-454.109467 gflops, -4.729000 (ms)
-264.078156 gflops, -8.132000 (ms)
-217.930145 gflops, -9.854000 (ms)
-185.431625 gflops, -11.581000 (ms)
-154.361969 gflops, -13.912000 (ms)
method_8a_multi_cpp, threads: 16, Max Gflops: 0.000000, min time: 0.000000 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
34.203224 gflops, 62.785999 (ms)
s= 0
34.255604 gflops, 62.689999 (ms)
s= 0
34.252323 gflops, 62.695999 (ms)
s= 0
34.167309 gflops, 62.852001 (ms)
s= 0
34.192879 gflops, 62.805000 (ms)
s= 0
34.236488 gflops, 62.724998 (ms)
s= 0
34.217396 gflops, 62.759998 (ms)
method_8a_multi, threads: 16, Max Gflops: 34.255604, min time: 62.689999 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
34.224483 gflops, 62.747002 (ms)
exit omp parallel
34.185257 gflops, 62.819000 (ms)
exit omp parallel
34.232666 gflops, 62.731998 (ms)
exit omp parallel
34.226665 gflops, 62.743000 (ms)
exit omp parallel
34.134724 gflops, 62.911999 (ms)
exit omp parallel
34.251778 gflops, 62.696999 (ms)
exit omp parallel
34.137436 gflops, 62.907001 (ms)
method_8a_multi_optimal, threads: 16, Max Gflops: 34.251778, min time: 62.696999 (ms)
---------------------------------------
*** ITERATION 5 ***
set num threads to 32 +++
num_threads (omp_get_num_threads)= 32
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 2097152, nb_rows*nz = 67108864
enter generate_vector
sz= 8388608
======= Reconstruct col_id matrix for special effects =====
nb_rows = 2097152
col_id[0] =0
5.969478 gflops, 22.483999 (ms)
5.952006 gflops, 22.549999 (ms)
5.964172 gflops, 22.504000 (ms)
5.981715 gflops, 22.438000 (ms)
5.975058 gflops, 22.462999 (ms)
6.058397 gflops, 22.153999 (ms)
6.037685 gflops, 22.230000 (ms)
method_8a_base_cpp, threads: 32, Max Gflops: 6.058397, min time: 22.153999 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
86.571136 gflops, 24.806000 (ms)
88.344727 gflops, 24.308001 (ms)
89.676521 gflops, 23.947001 (ms)
78.158524 gflops, 27.476000 (ms)
84.853943 gflops, 25.308001 (ms)
90.405136 gflops, 23.754000 (ms)
87.716835 gflops, 24.482000 (ms)
method_8a_multi_cpp, threads: 32, Max Gflops: 90.405136, min time: 23.754000 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
30.475025 gflops, 70.467003 (ms)
s= 0
30.454281 gflops, 70.514999 (ms)
s= 0
30.603579 gflops, 70.170998 (ms)
s= 0
30.533955 gflops, 70.331001 (ms)
s= 0
30.631514 gflops, 70.107002 (ms)
s= 0
30.751263 gflops, 69.834000 (ms)
s= 0
30.545681 gflops, 70.304001 (ms)
method_8a_multi, threads: 32, Max Gflops: 30.751263, min time: 69.834000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 2097152
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 2097152
vec_size= 2097152
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 67108864
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 2097152
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 67108864
before generate vector
enter generate_vector
sz= 8388608
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 2097152

1 max bandwidth: 79036
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
30.604450 gflops, 70.168999 (ms)
exit omp parallel
30.546986 gflops, 70.301003 (ms)
exit omp parallel
30.617540 gflops, 70.139000 (ms)
exit omp parallel
30.705093 gflops, 69.939003 (ms)
exit omp parallel
30.615358 gflops, 70.143997 (ms)
exit omp parallel
30.588757 gflops, 70.205002 (ms)
exit omp parallel
30.637196 gflops, 70.094002 (ms)
method_8a_multi_optimal, threads: 32, Max Gflops: 30.705093, min time: 69.939003 (ms)
====================================
Timers [All times in ms (1/1000 s)]: 
====================================

[Timer] [method_0] Matrix-Vector multiply         |  avg:    16.2295  |  tot:  3846.3828  |  count=   237
Inside empty ProjectSettings destructor
