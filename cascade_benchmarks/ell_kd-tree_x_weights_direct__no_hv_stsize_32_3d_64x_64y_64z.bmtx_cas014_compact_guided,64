=====================================
Input Node file: 
kernel_path: 
kernel_name: 
asci_binary: 
data type: 
co_processor: 
cpu_processor: 
sparse_format: 
nb_sockets: 674180464
nb_cores: 0
nb_coprocessors: 0
nb_nodes: 0
nb_nodes_per_stencil: 63
kernel_exec_time: 0.000000 (ms)
argv[0]= ./linux/release/spmv_openmp_host
argv[1]= matrix/ell_kd-tree_x_weights_direct__no_hv_stsize_32_3d_64x_64y_64z.bmtx
argv[2]= 1
filename= matrix/ell_kd-tree_x_weights_direct__no_hv_stsize_32_3d_64x_64y_64z.bmtx
choice= 1
argv[0]= 1
[ProjectSettings]   Reading config file: test.conf
[Project Settings] 	asci_binary = binary
asci_binary= binary
[Project Settings] 	in_format = ELL
filename = matrix/ell_kd-tree_x_weights_direct__no_hv_stsize_32_3d_64x_64y_64z.bmtx
choice= 1
spmv in ell format using OpenNP in Native mode
host
[ProjectSettings]   Reading config file: test.conf
[Project Settings] 	asci_binary = binary
[Project Settings] 	sparsity = NONE
[Project Settings] 	diag_sep = 80000
[Project Settings] 	inner_bandwidth = 2000
[Project Settings] 	sort_col_indices = 0
[Project Settings] 	n3d = 128
[Project Settings] 	random_seed = 1
[Project Settings] 	use_subdomains = 0
sparsity = NONE
[Project Settings] 	in_format = ELL
format == ELL ************
before load
** nb_rows= 262144
stencil_size= 32

Read ELLPACK file
Inside empty ProjectSettings destructor
---------------------------------------
*** ITERATION 0 ***
set num threads to 1 +++
num_threads (omp_get_num_threads)= 1
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
2.276111 gflops, 7.371000 (ms)
2.273643 gflops, 7.379000 (ms)
2.273952 gflops, 7.378000 (ms)
2.275494 gflops, 7.373000 (ms)
2.183396 gflops, 7.684000 (ms)
2.247751 gflops, 7.464000 (ms)
2.259862 gflops, 7.424000 (ms)
method_8a_base_cpp, threads: 1, Max Gflops: 2.276111, min time: 7.371000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
-0.328188 gflops, -817.932983 (ms)
1.484964 gflops, 180.768997 (ms)
1.485893 gflops, 180.656006 (ms)
1.487012 gflops, 180.520004 (ms)
1.483036 gflops, 181.003998 (ms)
-0.328021 gflops, -818.348022 (ms)
1.484972 gflops, 180.768005 (ms)
method_8a_multi_cpp, threads: 1, Max Gflops: 1.487012, min time: 180.520004 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
8.190750 gflops, 32.772999 (ms)
s= 0
8.187752 gflops, 32.785000 (ms)
s= 0
8.159877 gflops, 32.896999 (ms)
s= 0
8.178272 gflops, 32.823002 (ms)
s= 0
8.171302 gflops, 32.851002 (ms)
s= 0
8.188501 gflops, 32.782001 (ms)
s= 0
8.182013 gflops, 32.807999 (ms)
method_8a_multi, threads: 1, Max Gflops: 8.190750, min time: 32.772999 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
8.239778 gflops, 32.577999 (ms)
exit omp parallel
8.250668 gflops, 32.535000 (ms)
exit omp parallel
8.204268 gflops, 32.719002 (ms)
exit omp parallel
-0.277747 gflops, -966.474976 (ms)
exit omp parallel
8.247118 gflops, 32.549000 (ms)
exit omp parallel
8.244079 gflops, 32.561001 (ms)
exit omp parallel
8.247118 gflops, 32.549000 (ms)
method_8a_multi_optimal, threads: 1, Max Gflops: 8.250668, min time: 32.535000 (ms)
---------------------------------------
*** ITERATION 1 ***
set num threads to 2 +++
num_threads (omp_get_num_threads)= 2
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
4.388495 gflops, 3.823000 (ms)
4.367929 gflops, 3.841000 (ms)
4.387347 gflops, 3.824000 (ms)
4.391942 gflops, 3.820000 (ms)
4.274450 gflops, 3.925000 (ms)
4.347555 gflops, 3.859000 (ms)
4.352067 gflops, 3.855000 (ms)
method_8a_base_cpp, threads: 2, Max Gflops: 4.391942, min time: 3.820000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
1.793659 gflops, 149.658005 (ms)
1.797683 gflops, 149.322998 (ms)
-0.315942 gflops, -849.633972 (ms)
1.688528 gflops, 158.975998 (ms)
1.796456 gflops, 149.425003 (ms)
1.795855 gflops, 149.475006 (ms)
1.798081 gflops, 149.289993 (ms)
method_8a_multi_cpp, threads: 2, Max Gflops: 1.798081, min time: 149.289993 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
15.385765 gflops, 17.447001 (ms)
s= 0
15.388412 gflops, 17.444000 (ms)
s= 0
15.394589 gflops, 17.437000 (ms)
s= 0
15.393707 gflops, 17.438000 (ms)
s= 0
15.377833 gflops, 17.455999 (ms)
s= 0
15.340923 gflops, 17.497999 (ms)
s= 0
15.361992 gflops, 17.474001 (ms)
method_8a_multi, threads: 2, Max Gflops: 15.394589, min time: 17.437000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
15.860293 gflops, 16.924999 (ms)
exit omp parallel
15.821965 gflops, 16.966000 (ms)
exit omp parallel
15.864042 gflops, 16.921000 (ms)
exit omp parallel
-0.273344 gflops, -982.041016 (ms)
exit omp parallel
15.830361 gflops, 16.957001 (ms)
exit omp parallel
15.793108 gflops, 16.997000 (ms)
exit omp parallel
15.821965 gflops, 16.966000 (ms)
method_8a_multi_optimal, threads: 2, Max Gflops: 15.864042, min time: 16.921000 (ms)
---------------------------------------
*** ITERATION 2 ***
set num threads to 4 +++
num_threads (omp_get_num_threads)= 4
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
7.880327 gflops, 2.129000 (ms)
7.898877 gflops, 2.124000 (ms)
7.966390 gflops, 2.106000 (ms)
7.898877 gflops, 2.124000 (ms)
7.710117 gflops, 2.176000 (ms)
7.836159 gflops, 2.141000 (ms)
7.939999 gflops, 2.113000 (ms)
method_8a_base_cpp, threads: 4, Max Gflops: 7.966390, min time: 2.106000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
2.069425 gflops, 129.714996 (ms)
2.072188 gflops, 129.542007 (ms)
2.069920 gflops, 129.684006 (ms)
-0.308768 gflops, -869.377014 (ms)
2.064174 gflops, 130.044998 (ms)
2.069537 gflops, 129.707993 (ms)
2.071997 gflops, 129.554001 (ms)
method_8a_multi_cpp, threads: 4, Max Gflops: 2.072188, min time: 129.542007 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
29.809601 gflops, 9.005000 (ms)
s= 0
29.753429 gflops, 9.022000 (ms)
s= 0
29.674494 gflops, 9.046000 (ms)
s= 0
29.842741 gflops, 8.995000 (ms)
s= 0
29.661375 gflops, 9.050000 (ms)
s= 0
29.736950 gflops, 9.027000 (ms)
s= 0
29.710621 gflops, 9.035000 (ms)
method_8a_multi, threads: 4, Max Gflops: 29.842741, min time: 8.995000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
29.684336 gflops, 9.043000 (ms)
exit omp parallel
29.802982 gflops, 9.007000 (ms)
exit omp parallel
29.727072 gflops, 9.030000 (ms)
exit omp parallel
29.826162 gflops, 9.000000 (ms)
exit omp parallel
29.760027 gflops, 9.020000 (ms)
exit omp parallel
29.829477 gflops, 8.999000 (ms)
exit omp parallel
29.766630 gflops, 9.018000 (ms)
method_8a_multi_optimal, threads: 4, Max Gflops: 29.829477, min time: 8.999000 (ms)
---------------------------------------
*** ITERATION 3 ***
set num threads to 8 +++
num_threads (omp_get_num_threads)= 8
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
8.779286 gflops, 1.911000 (ms)
9.182932 gflops, 1.827000 (ms)
8.710912 gflops, 1.926000 (ms)
8.928801 gflops, 1.879000 (ms)
8.981379 gflops, 1.868000 (ms)
8.797701 gflops, 1.907000 (ms)
9.005484 gflops, 1.863000 (ms)
method_8a_base_cpp, threads: 8, Max Gflops: 9.182932, min time: 1.827000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
-0.305982 gflops, -877.293030 (ms)
2.186598 gflops, 122.764000 (ms)
2.201572 gflops, 121.929001 (ms)
2.206676 gflops, 121.647003 (ms)
2.201247 gflops, 121.946999 (ms)
2.202457 gflops, 121.879997 (ms)
2.199551 gflops, 122.041000 (ms)
method_8a_multi_cpp, threads: 8, Max Gflops: 2.206676, min time: 121.647003 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
44.813934 gflops, 5.990000 (ms)
s= 0
44.575798 gflops, 6.022000 (ms)
s= 0
44.598015 gflops, 6.019000 (ms)
s= 0
44.635094 gflops, 6.014000 (ms)
s= 0
44.672237 gflops, 6.009000 (ms)
s= 0
44.739243 gflops, 6.000000 (ms)
s= 0
44.649940 gflops, 6.012000 (ms)
method_8a_multi, threads: 8, Max Gflops: 44.813934, min time: 5.990000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
45.009296 gflops, 5.964000 (ms)
exit omp parallel
44.866367 gflops, 5.983000 (ms)
exit omp parallel
44.896378 gflops, 5.979000 (ms)
exit omp parallel
45.100040 gflops, 5.952000 (ms)
exit omp parallel
45.077324 gflops, 5.955000 (ms)
exit omp parallel
45.092468 gflops, 5.953000 (ms)
exit omp parallel
44.575798 gflops, 6.022000 (ms)
method_8a_multi_optimal, threads: 8, Max Gflops: 45.100040, min time: 5.952000 (ms)
---------------------------------------
*** ITERATION 4 ***
set num threads to 16 +++
num_threads (omp_get_num_threads)= 16
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
12.473766 gflops, 1.345000 (ms)
12.336188 gflops, 1.360000 (ms)
11.839954 gflops, 1.417000 (ms)
12.576624 gflops, 1.334000 (ms)
12.436780 gflops, 1.349000 (ms)
12.264047 gflops, 1.368000 (ms)
12.510974 gflops, 1.341000 (ms)
method_8a_base_cpp, threads: 16, Max Gflops: 12.576624, min time: 1.334000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
2.465561 gflops, 108.874001 (ms)
2.456715 gflops, 109.265999 (ms)
2.459259 gflops, 109.153000 (ms)
2.462214 gflops, 109.022003 (ms)
2.460792 gflops, 109.084999 (ms)
2.454918 gflops, 109.346001 (ms)
2.457143 gflops, 109.247002 (ms)
method_8a_multi_cpp, threads: 16, Max Gflops: 2.465561, min time: 108.874001 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
34.282944 gflops, 7.830000 (ms)
s= 0
34.134724 gflops, 7.864000 (ms)
s= 0
34.261066 gflops, 7.835000 (ms)
s= 0
34.065414 gflops, 7.880000 (ms)
s= 0
33.957680 gflops, 7.905000 (ms)
s= 0
33.429073 gflops, 8.030000 (ms)
s= 0
33.799480 gflops, 7.942000 (ms)
method_8a_multi, threads: 16, Max Gflops: 34.282944, min time: 7.830000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
33.621674 gflops, 7.984000 (ms)
exit omp parallel
34.117367 gflops, 7.868000 (ms)
exit omp parallel
33.833557 gflops, 7.934000 (ms)
exit omp parallel
32.820084 gflops, 8.179000 (ms)
exit omp parallel
33.748486 gflops, 7.954000 (ms)
exit omp parallel
33.837822 gflops, 7.933000 (ms)
exit omp parallel
33.663841 gflops, 7.974000 (ms)
method_8a_multi_optimal, threads: 16, Max Gflops: 34.117367, min time: 7.868000 (ms)
---------------------------------------
*** ITERATION 5 ***
set num threads to 32 +++
num_threads (omp_get_num_threads)= 32
============== METHOD 8a base cpp  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nz= 32, nb_rows= 262144, nb_rows*nz = 8388608
enter generate_vector
sz= 1048576
======= Reconstruct col_id matrix for special effects =====
nb_rows = 262144
col_id[0] =0
5.210316 gflops, 3.220000 (ms)
5.181352 gflops, 3.238000 (ms)
4.862961 gflops, 3.450000 (ms)
5.115005 gflops, 3.280000 (ms)
5.155875 gflops, 3.254000 (ms)
5.173363 gflops, 3.243000 (ms)
5.269226 gflops, 3.184000 (ms)
method_8a_base_cpp, threads: 32, Max Gflops: 5.269226, min time: 3.184000 (ms)
============== METHOD 8a Multi NoVec, 1 domain  ===================
CHECK RESULTS: NOT SURE IT WORKS in NOVECTOR  (CPP) MODE ======
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
*** nb_subdomains: 1
nz= 32
2.388747 gflops, 112.375000 (ms)
2.348866 gflops, 114.282997 (ms)
2.396360 gflops, 112.017998 (ms)
2.394137 gflops, 112.122002 (ms)
2.396274 gflops, 112.022003 (ms)
2.395334 gflops, 112.066002 (ms)
2.394052 gflops, 112.125999 (ms)
method_8a_multi_cpp, threads: 32, Max Gflops: 2.396360, min time: 112.017998 (ms)
before checkSolutions
after checkSolutions
after free matrices
============== METHOD 8a Multi, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
after bandwidthQ*** nb_subdomains: 1
s= 0
s= 0
s= 0
s= 0
29.989437 gflops, 8.951000 (ms)
s= 0
30.036415 gflops, 8.937000 (ms)
s= 0
30.300875 gflops, 8.859000 (ms)
s= 0
30.400393 gflops, 8.830000 (ms)
s= 0
30.421061 gflops, 8.824000 (ms)
s= 0
30.205408 gflops, 8.887000 (ms)
s= 0
30.287201 gflops, 8.863000 (ms)
method_8a_multi, threads: 32, Max Gflops: 30.421061, min time: 8.824000 (ms)
============== METHOD 8a Multi Optimal, 1 domain  ===================
nb subdomains= 1
nb_rows_multi = 262144
inside generate Multi
generate: nb_subdomains = 1
subdomain 0
nb_rows= 262144
vec_size= 262144
nb_mat= 4
nb nonzeros per row= 32
tot_nz= 8388608
generateMulti: vec_vt allocate: nb_vec, vec_size= 4, 262144
generateMulti: nb_mat= 4 
before col_id_t
offsets: 0, 8388608
before generate vector
enter generate_vector
sz= 1048576
before generate col_id
======= Reconstruct col_id matrix for special effects =====
before generate data
col_id, nb rows: 262144

1 max bandwidth: 261403
*** nb_subdomains: 1
exit omp parallel
exit omp parallel
exit omp parallel
exit omp parallel
29.932587 gflops, 8.968000 (ms)
exit omp parallel
30.090290 gflops, 8.921000 (ms)
exit omp parallel
30.026339 gflops, 8.940000 (ms)
exit omp parallel
30.191818 gflops, 8.891000 (ms)
exit omp parallel
30.198612 gflops, 8.889000 (ms)
exit omp parallel
30.073433 gflops, 8.926000 (ms)
exit omp parallel
29.932587 gflops, 8.968000 (ms)
method_8a_multi_optimal, threads: 32, Max Gflops: 30.198612, min time: 8.889000 (ms)
====================================
Timers [All times in ms (1/1000 s)]: 
====================================

[Timer] [method_0] Matrix-Vector multiply         |  avg:    -0.2668  |  tot:   -63.2383  |  count=   237
Inside empty ProjectSettings destructor
